{"version":3,"sources":["components/Button/Button.styled.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/InputForm/InputForm.jsx","Pages/LoginPage.jsx"],"names":["ButtonPhonebook","styled","button","SectionApp","div","Section","title","children","inputForm","name","id","onChange","controlId","label","className","Control","size","type","placeholder","SingUpPageView","useState","email","setEmail","password","setPassword","dispatch","useDispatch","reset","e","onSubmit","preventDefault","authOperations","logIn","loginForm","map","event","value","handleChange","target","variant"],"mappings":"gMAEaA,E,MAAkBC,EAAOC,OAAV,klB,sFCAfC,E,MAAaF,EAAOG,IAAV,kD,OCCVC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACrB,eAACJ,EAAD,WACE,6BAAKG,IACJC,O,iCCNL,uEAGe,SAASC,EAAT,GAA4C,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,SAC5C,OACE,cAAC,IAAD,CAAeC,UAAU,gBAAgBC,MAAOJ,EAAMK,UAAU,OAAhE,SACE,cAAC,IAAKC,QAAN,CACEC,KAAK,KAEJC,KAAK,OACNR,KAAMA,EACNS,YAAaT,EACbE,SAAUA,GAJLD,O,oTCEE,SAASS,IACtB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EAAWC,cAqBXC,EAAQ,SAAAC,GACZN,EAAS,IACTE,EAAY,KAGd,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAMK,SAbW,SAAAD,GACnBA,EAAEE,iBACFL,EAASM,IAAeC,MAAM,CAAEX,QAAOE,cACvCI,EAAMC,IAUJ,UACE,mCACGK,EAAUC,KAAI,gBAAGzB,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OACb,cAAC,IAAD,CAEED,KAAMA,EACNE,SAAU,SAAAwB,GAAK,OAhCN,SAAC,EAAUC,GAC9B,OADwC,EAAlB3B,MAEpB,IAAK,QACHa,GAAS,kBAAMc,KACf,MACF,IAAK,WACHZ,GAAY,kBAAMY,MA0BOC,CAAa,CAAE5B,QAAQ0B,EAAMG,OAAOF,SAFlD1B,QAMX,cAAC,IAAD,CAAiB6B,QAAQ,UAAUtB,KAAK,SAAxC","file":"static/js/4.1e590704.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const ButtonPhonebook = styled.button`\r\n  margin-left: auto;\r\n  margin-right: auto; \r\n  padding: 10px 20px;\r\n  outline: none;\r\n  border: 1px solid rgba(244, 247, 62, 0.809);\r\n  background-color: #31708f;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: small;\r\n  border-radius: 15px;\r\n  box-shadow: 0 9px #999;\r\n  &:hover {\r\n    background-color: rgba(5, 104, 253, 0.85);\r\n    box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.24),\r\n      0 17px 50px 0 rgba(0, 0, 0, 0.19);\r\n  }\r\n  &.btn:active {\r\n    background-color: rgba(5, 104, 253, 0.85);\r\n    box-shadow: 0 3px #666;\r\n    transform: translateY(3px);\r\n}\r\n`;","import styled from '@emotion/styled';\r\n\r\nexport const SectionApp = styled.div`\r\n  padding: 10px 5px;\r\n`;","import React from 'react';\r\nimport { SectionApp } from './Section.styled';\r\n\r\nexport const Section = ({ title, children }) => (\r\n  <SectionApp>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </SectionApp>\r\n);\r\n","import { Form, FloatingLabel } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function inputForm({ name, id, onChange }) {\r\n  return (\r\n    <FloatingLabel controlId=\"floatingInput\" label={name} className=\"mb-3\">\r\n      <Form.Control\r\n        size=\"lg\"\r\n        key={id}\r\n         type=\"name\"    \r\n        name={name}\r\n        placeholder={name}\r\n        onChange={onChange}\r\n      />\r\n    </FloatingLabel>\r\n  );\r\n}\r\n","\nimport { Form } from 'react-bootstrap';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/Auth';\nimport loginForm from '../components/data/loginForm.json';\nimport InputForm from '../components/InputForm/InputForm';\nimport { ButtonPhonebook } from '../components/Button/Button.styled';\nimport { Section } from '../components/Section/Section';\n\nexport default function SingUpPageView() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = ({ name }, value) => {\n    switch (name) {\n      case 'Email':\n        setEmail(() => value);\n        break;\n      case 'Password':\n        setPassword(() => value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    reset(e);\n  };\n\n  const reset = e => {\n    setEmail('');\n    setPassword('');\n\n  };\n  return (\n    <Section>\n      <Form onSubmit={handleSubmit}>\n        <>\n          {loginForm.map(({ name, id }) => (\n            <InputForm\n              key={id}\n              name={name}\n              onChange={event => handleChange({ name }, event.target.value)}\n            />\n          ))}\n        </>\n        <ButtonPhonebook variant=\"primary\" type=\"submit\">\n          Submit\n        </ButtonPhonebook>\n      </Form>\n     </Section>\n  );\n}\n"],"sourceRoot":""}