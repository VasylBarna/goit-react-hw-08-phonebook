{"version":3,"sources":["components/Button/Button.styled.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/AddContact/AddContact.jsx","Pages/AddContactPage.jsx"],"names":["ButtonPhonebook","styled","button","SectionApp","div","Section","title","children","AddContact","useState","name","setName","number","setNumber","useAddContactMutation","addContact","openForm","setOpenForm","reset","e","Form","onSubmit","preventDefault","toast","success","inputForms","map","id","type","pattern","required","FloatingLabel","htmlFor","label","className","Control","size","placeholder","onChange","event","value","handleChange","target","to","CreateContactPage"],"mappings":"gMAEaA,E,MAAkBC,EAAOC,OAAV,klB,sFCAfC,E,MAAaF,EAAOG,IAAV,kD,OCCVC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACrB,eAACJ,EAAD,WACE,6BAAKG,IACJC,O,q/CCGU,SAASC,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAqBC,cAAdC,EAAP,oBACA,EAAgCN,oBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KAqBMC,EAAQ,SAAAC,GACZR,EAAQ,IACRE,EAAU,IACVI,GAAY,IAGd,OACE,cAACZ,EAAA,EAAD,UACGW,EACC,eAACI,EAAA,EAAD,CAAMC,SAfS,SAAAF,GACnBA,EAAEG,iBACFP,EAAW,CAAEL,OAAME,WACnBW,IAAMC,QAAQ,qBACdN,EAAMC,IAWF,UACGM,EAAWC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMlB,EAAb,EAAaA,KAAMmB,EAAnB,EAAmBA,QAASvB,EAA5B,EAA4BA,MAAOwB,EAAnC,EAAmCA,SAAnC,OACd,cAACC,EAAA,EAAD,CACEC,QAASL,EAETM,MAAOvB,EACPwB,UAAU,OAJZ,SAME,cAACd,EAAA,EAAKe,QAAN,CACEC,KAAK,KACLT,GAAIA,EACJC,KAAMA,EACNlB,KAAMA,EACNmB,QAASA,EACTvB,MAAOA,EACPwB,SAAUA,EACVO,YAAa3B,EACb4B,SAAU,SAAAC,GAAK,OA7CR,SAAC,EAAUC,GAC9B,OADwC,EAAlB9B,MAEpB,IAAK,OACHC,GAAQ,kBAAM6B,KACd,MACF,IAAK,SACH3B,GAAU,kBAAM2B,MAuCWC,CAAa,CAAE/B,QAAQ6B,EAAMG,OAAOF,WAbpD9B,MAiBT,cAAC,IAAD,CAAiBkB,KAAK,SAAtB,+BAGF,cAAC,IAAD,CAAUe,GAAG,gBCjEN,SAASC,IACtB,OACE,kCACE,cAACpC,EAAD","file":"static/js/6.0b04f024.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const ButtonPhonebook = styled.button`\r\n  margin-left: auto;\r\n  margin-right: auto; \r\n  padding: 10px 20px;\r\n  outline: none;\r\n  border: 1px solid rgba(244, 247, 62, 0.809);\r\n  background-color: #31708f;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: small;\r\n  border-radius: 15px;\r\n  box-shadow: 0 9px #999;\r\n  &:hover {\r\n    background-color: rgba(5, 104, 253, 0.85);\r\n    box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.24),\r\n      0 17px 50px 0 rgba(0, 0, 0, 0.19);\r\n  }\r\n  &.btn:active {\r\n    background-color: rgba(5, 104, 253, 0.85);\r\n    box-shadow: 0 3px #666;\r\n    transform: translateY(3px);\r\n}\r\n`;","import styled from '@emotion/styled';\r\n\r\nexport const SectionApp = styled.div`\r\n  padding: 10px 5px;\r\n`;","import React from 'react';\r\nimport { SectionApp } from './Section.styled';\r\n\r\nexport const Section = ({ title, children }) => (\r\n  <SectionApp>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </SectionApp>\r\n);\r\n","import { useState } from 'react';\r\nimport { useAddContactMutation } from '../../redux/Phonebook/phonebook-operation';\r\nimport inputForms from '../data/inputForms.json';\r\nimport { Form, FloatingLabel } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { ButtonPhonebook } from '../Button/Button.styled';\r\nimport { Redirect } from 'react-router';\r\nimport { Section } from '../Section/Section';\r\n\r\nexport default function AddContact() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [addContact] = useAddContactMutation();\r\n  const [openForm, setOpenForm] = useState(true);\r\n\r\n  const handleChange = ({ name }, value) => {\r\n    switch (name) {\r\n      case 'Name':\r\n        setName(() => value);\r\n        break;\r\n      case 'Number':\r\n        setNumber(() => value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    addContact({ name, number });\r\n    toast.success('New contact added');\r\n    reset(e);\r\n  };\r\n  const reset = e => {\r\n    setName('');\r\n    setNumber('');\r\n    setOpenForm(false);\r\n  };\r\n\r\n  return (\r\n    <Section>\r\n      {openForm ? (\r\n        <Form onSubmit={handleSubmit}>\r\n          {inputForms.map(({ id, type, name, pattern, title, required }) => (\r\n            <FloatingLabel\r\n              htmlFor={id}\r\n              key={name}\r\n              label={name}\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                size=\"lg\"\r\n                id={id}\r\n                type={type}\r\n                name={name}\r\n                pattern={pattern}\r\n                title={title}\r\n                required={required}\r\n                placeholder={name}\r\n                onChange={event => handleChange({ name }, event.target.value)}\r\n              />\r\n            </FloatingLabel>\r\n          ))}\r\n          <ButtonPhonebook type=\"submit\">Create contact</ButtonPhonebook>\r\n        </Form>\r\n      ) : (\r\n        <Redirect to=\"/contacts\"></Redirect>\r\n                                  )}\r\n  </Section>\r\n  );\r\n}","import AddContact from '../components/AddContact/AddContact';\r\n\r\nexport default function CreateContactPage() {\r\n  return (\r\n    <section>\r\n      <AddContact />\r\n    </section>\r\n  );\r\n}\r\n"],"sourceRoot":""}