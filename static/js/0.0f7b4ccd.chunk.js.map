{"version":3,"sources":["../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/warning/warning.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/Form.js"],"names":["FormContext","React","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","FormGroup","ref","controlId","as","Component","props","context","useMemo","_jsx","Provider","children","displayName","warning","module","exports","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","_arrayLikeToArray","len","arr2","FloatingLabel","bsPrefix","className","label","useBootstrapPrefix","_jsxs","classNames","htmlFor","propTypes","type","PropTypes","string","tooltip","bool","elementType","Feedback","FormCheckInput","id","isValid","isInvalid","useContext","FormCheckLabel","FormCheck","bsSwitchPrefix","inline","disabled","feedbackTooltip","feedback","feedbackType","style","title","innerFormContext","hasLabel","input","_Fragment","assign","Input","Label","FormControl","classes","size","htmlSize","plaintext","readOnly","rHyphen","pascalCase","str","toUpperCase","replace","_","chr","createWithBsPrefix","prefix","defaultProps","BsComponent","Tag","resolvedPrefix","DEVICE_SIZES","Col","spans","forEach","brkPoint","span","offset","order","propValue","infix","useCol","colProps","FormLabel","column","visuallyHidden","columnClass","FormRange","FormSelect","FormText","muted","Switch","_ref","any","validated","Form","Group","Control","Floating","FormFloating","Check","Text","Range","Select"],"mappings":"gJAAA,WAEMA,EAA2BC,gBAAoB,IACtCD,O,gFCCA,SAASE,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,gGIDhGC,EAAyBxB,cAAiB,WAK7CyB,GAAQ,IAJTC,EAIS,EAJTA,UAIS,IAFTC,GAAIC,OAEK,MAFO,MAEP,EADNC,EACM,iBACHC,EAAUC,mBAAQ,iBAAO,CAC7BL,eACE,CAACA,IACL,OAAoBM,cAAKjC,IAAYkC,SAAU,CAC7Cd,MAAOW,EACPI,SAAuBF,cAAKJ,EAAD,YAAC,eAAgBC,GAAjB,IACzBJ,IAAKA,UAIXD,EAAUW,YAAc,YACTX,O,iCCLf,IAEIY,EAAU,aA2CdC,EAAOC,QAAUF,G,iCC7DjB,+CACe,SAASG,EAA4BC,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,YAAiBA,EAAGC,GACtD,IAAIC,EAAIlC,OAAOmC,UAAUC,SAASC,KAAKL,GAAGM,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBF,EAAEO,cAAaL,EAAIF,EAAEO,YAAYC,MAC7C,QAANN,GAAqB,QAANA,EAAoBtC,MAAM6C,KAAKT,GACxC,cAANE,GAAqB,2CAA2CQ,KAAKR,GAAW,YAAiBF,EAAGC,QAAxG,K,iCCPa,SAASU,EAAkBjD,EAAKkD,IAClC,MAAPA,GAAeA,EAAMlD,EAAIkB,UAAQgC,EAAMlD,EAAIkB,QAE/C,IAAK,IAAIjB,EAAI,EAAGkD,EAAO,IAAIjD,MAAMgD,GAAMjD,EAAIiD,EAAKjD,IAC9CkD,EAAKlD,GAAKD,EAAIC,GAGhB,OAAOkD,EAPT,mC,8JCMMC,EAA6BtD,cAAiB,WAOjDyB,GAAQ,IANT8B,EAMS,EANTA,SACAC,EAKS,EALTA,UACAtB,EAIS,EAJTA,SACAR,EAGS,EAHTA,UACA+B,EAES,EAFTA,MACG5B,EACM,iBAET,OADA0B,EAAWG,YAAmBH,EAAU,iBACpBI,eAAMnC,IAAD,YAAC,aACxBC,IAAKA,EACL+B,UAAWI,IAAWJ,EAAWD,GACjC7B,UAAWA,GACRG,GAJoB,IAKvBK,SAAU,CAACA,EAAuBF,cAAK,QAAS,CAC9C6B,QAASnC,EACTQ,SAAUuB,WAIhBH,EAAcnB,YAAc,gBACbmB,O,yICvBTQ,EAAY,CAMhBC,KAAMC,IAAUC,OAGhBC,QAASF,IAAUG,KACnBxC,GAAIqC,IAAUI,aAEVC,EAAwBrE,cAC9B,WAMGyB,GANH,QACEE,GAAIC,OADN,MACkB,MADlB,EAEE4B,EAFF,EAEEA,UAFF,IAGEO,YAHF,MAGS,QAHT,MAIEG,eAJF,SAKKrC,EALL,wBAMwBG,cAAKJ,EAAD,YAAC,eAAgBC,GAAjB,IAC1BJ,IAAKA,EACL+B,UAAWI,IAAWJ,EAAD,UAAeO,EAAf,YAAuBG,EAAU,UAAY,mBAEpEG,EAASlC,YAAc,WACvBkC,EAASP,UAAYA,EACNO,Q,mFCvBTC,EAA8BtE,cAAiB,WAUlDyB,GAAQ,IATT8C,EASS,EATTA,GACAhB,EAQS,EARTA,SACAC,EAOS,EAPTA,UAOS,IANTO,YAMS,MANF,WAME,MALTS,eAKS,aAJTC,iBAIS,aAFT9C,GAAIC,OAEK,MAFO,QAEP,EADNC,EACM,iBAEPH,EACEgD,qBAAW3E,KADb2B,UAGF,OADA6B,EAAWG,YAAmBH,EAAU,oBACpBvB,cAAKJ,EAAD,YAAC,eAAgBC,GAAjB,IACtBJ,IAAKA,EACLsC,KAAMA,EACNQ,GAAIA,GAAM7C,EACV8B,UAAWI,IAAWJ,EAAWD,EAAUiB,GAAW,WAAYC,GAAa,oBAGnFH,EAAenC,YAAc,iBACdmC,Q,qCCvBTK,EAA8B3E,cAAiB,WAKlDyB,GAAQ,IAJT8B,EAIS,EAJTA,SACAC,EAGS,EAHTA,UACAK,EAES,EAFTA,QACGhC,EACM,iBAEPH,EACEgD,qBAAW3E,KADb2B,UAGF,OADA6B,EAAWG,YAAmBH,EAAU,oBACpBvB,cAAK,QAAD,YAAC,eAAcH,GAAf,IACtBJ,IAAKA,EACLoC,QAASA,GAAWnC,EACpB8B,UAAWI,IAAWJ,EAAWD,SAGrCoB,EAAexC,YAAc,iBACdwC,Q,sLCZTC,EAAyB5E,cAAiB,WAoB7CyB,GAAQ,IAnBT8C,EAmBS,EAnBTA,GACAhB,EAkBS,EAlBTA,SACAsB,EAiBS,EAjBTA,eAiBS,IAhBTC,cAgBS,aAfTC,gBAeS,aAdTP,eAcS,aAbTC,iBAaS,aAZTO,uBAYS,SAXTC,EAWS,EAXTA,SACAC,EAUS,EAVTA,aACA1B,EASS,EATTA,UACA2B,EAQS,EARTA,MAQS,IAPTC,aAOS,MAPD,GAOC,MANTrB,YAMS,MANF,WAME,EALTN,EAKS,EALTA,MACAvB,EAIS,EAJTA,SAIS,IAFTP,UAES,MAFJ,QAEI,EADNE,EACM,iBACT0B,EAAWG,YAAmBH,EAAU,cACxCsB,EAAiBnB,YAAmBmB,EAAgB,eACpD,IACEnD,EACEgD,qBAAW3E,KADb2B,UAEI2D,EAAmBtD,mBAAQ,iBAAO,CACtCL,UAAW6C,GAAM7C,KACf,CAACA,EAAW6C,IACVe,EAAoB,MAAT7B,IAA2B,IAAVA,IAAoBvB,EAEhDqD,EAAqBvD,cAAKsC,EAAD,YAAC,eAAqBzC,GAAtB,IAC7BkC,KAAe,WAATA,EAAoB,WAAaA,EACvCtC,IAAKA,EACL+C,QAASA,EACTC,UAAWA,EACXM,SAAUA,EACVpD,GAAIA,KAGN,OAAoBK,cAAKjC,IAAYkC,SAAU,CAC7Cd,MAAOkE,EACPnD,SAAuBF,cAAK,MAAO,CACjCmD,MAAOA,EACP3B,UAAWI,IAAWJ,EAAWC,GAASF,EAAUuB,GAAU,GAAJ,OAAOvB,EAAP,WAAmC,WAATQ,GAAqBc,GACzG3C,SAAUA,GAAyByB,eAAM6B,WAAW,CAClDtD,SAAU,CAACqD,EAAOD,GAAyBtD,cAAK2C,EAAgB,CAC9DS,MAAOA,EACPlD,SAAUuB,IACRwB,GAAyBjD,cAAKqC,EAAU,CAC1CN,KAAMmB,EACNhB,QAASc,EACT9C,SAAU+C,cAMpBL,EAAUzC,YAAc,YACT3B,aAAOiF,OAAOb,EAAW,CACtCc,MAAOpB,EACPqB,MAAOhB,I,4HChEHiB,EAA2B5F,cAAiB,WAc/CyB,GAAQ,IAKLoE,EAMG,EAxBPtC,EAaS,EAbTA,SACAQ,EAYS,EAZTA,KACA+B,EAWS,EAXTA,KACAC,EAUS,EAVTA,SACAxB,EASS,EATTA,GACAf,EAQS,EARTA,UAQS,IAPTgB,eAOS,aANTC,iBAMS,SALTuB,EAKS,EALTA,UACAC,EAIS,EAJTA,SAIS,IAFTtE,GAAIC,OAEK,MAFO,QAEP,EADNC,EACM,iBAEPH,EACEgD,qBAAW3E,KADb2B,WAEF6B,EAAWG,YAAmBH,EAAU,gBAGpCyC,GACFH,EAAU,yBACJtC,EADC,eACsB,IAGtB,mBACJA,GAAW,GADP,wBAEDA,EAFC,YAEWuC,GAASA,GAF3BD,EAAO,GAOT,OAAoB7D,cAAKJ,EAAD,YAAC,eAAgBC,GAAjB,IACtBkC,KAAMA,EACN+B,KAAMC,EACNtE,IAAKA,EACLwE,SAAUA,EACV1B,GAAIA,GAAM7C,EACV8B,UAAWI,IAAWJ,EAAWqC,EAASrB,GAAW,WAAYC,GAAa,aAAuB,UAATV,GAAA,UAAuBR,EAAvB,iBAGhGqC,EAAYzD,YAAc,cACX3B,aAAOiF,OAAOG,EAAa,CACxCvB,aCpDE6B,EAAU,Q,oCCMRC,EAAa,SAAAC,GAAG,OAAIA,EAAI,GAAGC,eDLApC,ECKyBmC,EDJjDnC,EAAOqC,QAAQJ,GAAS,SAAUK,EAAGC,GAC1C,OAAOA,EAAIH,kBCGgDvD,MAAM,GDLtD,IAAkBmB,GEAlBwC,MDQA,SAA4BC,GAInC,6DAAJ,GAAI,IAHNvE,mBAGM,MAHQgE,EAAWO,GAGnB,EAFN9E,EAEM,EAFNA,UACA+E,EACM,EADNA,aAEMC,EAA2B5G,cAAiB,WAK/CyB,GAAQ,IAJT+B,EAIS,EAJTA,UACAD,EAGS,EAHTA,SAGS,IAFT5B,GAAIkF,OAEK,MAFCjF,GAAa,MAEd,EADNC,EACM,iBACHiF,EAAiBpD,YAAmBH,EAAUmD,GACpD,OAAoB1E,cAAK6E,EAAD,aACtBpF,IAAKA,EACL+B,UAAWI,IAAWJ,EAAWsD,IAC9BjF,OAKP,OAFA+E,EAAYD,aAAeA,EAC3BC,EAAYzE,YAAcA,EACnByE,EC5BMH,CAAmB,iB,kECG5BM,EAAe,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,MAwCrD,IAAMC,EAAmBhH,cACzB,SAAC6B,EAAOJ,GACN,MAzCK,YAKJ,IAJDE,EAIC,EAJDA,GACA4B,EAGC,EAHDA,SACAC,EAEC,EAFDA,UACG3B,EACF,iBACD0B,EAAWG,YAAmBH,EAAU,OACxC,IAAM0D,EAAQ,GACRpB,EAAU,GAuBhB,OAtBAkB,EAAaG,SAAQ,SAAAC,GACnB,IAEIC,EACAC,EACAC,EAJEC,EAAY1F,EAAMsF,UACjBtF,EAAMsF,GAKY,kBAAdI,GAAuC,MAAbA,GAEjCH,EAGEG,EAHFH,KACAC,EAEEE,EAFFF,OACAC,EACEC,EADFD,OAGFF,EAAOG,EAGT,IAAMC,EAAqB,OAAbL,EAAA,WAAwBA,GAAa,GAC/CC,GAAMH,EAAM/F,MAAc,IAATkG,EAAA,UAAmB7D,GAAnB,OAA8BiE,GAA9B,UAA2CjE,GAA3C,OAAsDiE,EAAtD,YAA+DJ,IACvE,MAATE,GAAezB,EAAQ3E,KAAR,eAAqBsG,EAArB,YAA8BF,IACnC,MAAVD,GAAgBxB,EAAQ3E,KAAR,gBAAsBsG,EAAtB,YAA+BH,OAE9C,CAAC,2BAAKxF,GAAN,IACL2B,UAAWI,IAAU,WAAV,GAAWJ,GAAX,OAAyByD,EAAUpB,MAC7C,CACDlE,KACA4B,WACA0D,UAYGQ,CAAO5F,GAPZ,0BACE2B,EADF,EACEA,UACGkE,EAFL,4BAIE/F,GAAIC,OAJN,MAIkB,MAJlB,EAKE2B,EALF,EAKEA,SACA0D,EANF,EAMEA,MAEF,OAAoBjF,cAAKJ,EAAD,YAAC,eAAgB8F,GAAjB,IACtBjG,IAAKA,EACL+B,UAAWI,IAAWJ,GAAYyD,EAAM7F,QAAUmC,SAGtDyD,EAAI7E,YAAc,MACH6E,Q,oEChDTW,EAAyB3H,cAAiB,WAS7CyB,GAAQ,QAPTE,GAAIC,OAOK,MAPO,QAOP,EANT2B,EAMS,EANTA,SACAqE,EAKS,EALTA,OACAC,EAIS,EAJTA,eACArE,EAGS,EAHTA,UACAK,EAES,EAFTA,QACGhC,EACM,iBAEPH,EACEgD,qBAAW3E,KADb2B,UAEF6B,EAAWG,YAAmBH,EAAU,cACxC,IAAIuE,EAAc,iBACI,kBAAXF,IAAqBE,EAAc,GAAH,OAAMA,EAAN,YAAqBA,EAArB,YAAoCF,IAC/E,IAAM/B,EAAUjC,IAAWJ,EAAWD,EAAUsE,GAAkB,kBAAmBD,GAAUE,GAG/F,OADAjE,EAAUA,GAAWnC,EACjBkG,EAA4B5F,cAAKgF,EAAD,aAClCvF,IAAKA,EACLE,GAAI,QACJ6B,UAAWqC,EACXhC,QAASA,GACNhC,IAKHG,aAHF,CAGOJ,EAAD,aACFH,IAAKA,EACL+B,UAAWqC,EACXhC,QAASA,GACNhC,OAIT8F,EAAUxF,YAAc,YACxBwF,EAAUhB,aA1CW,CACnBiB,QAAQ,EACRC,gBAAgB,GAyCHF,Q,gCC7CTI,EAAyB/H,cAAiB,WAK7CyB,GAAQ,IAJT8B,EAIS,EAJTA,SACAC,EAGS,EAHTA,UACAe,EAES,EAFTA,GACG1C,EACM,iBAEPH,EACEgD,qBAAW3E,KADb2B,UAGF,OADA6B,EAAWG,YAAmBH,EAAU,cACpBvB,cAAK,QAAD,YAAC,eAAcH,GAAf,IACtBkC,KAAM,QACNtC,IAAKA,EACL+B,UAAWI,IAAWJ,EAAWD,GACjCgB,GAAIA,GAAM7C,QAGdqG,EAAU5F,YAAc,YACT4F,Q,wEClBTC,EAA0BhI,cAAiB,WAS9CyB,GAAQ,IART8B,EAQS,EARTA,SACAuC,EAOS,EAPTA,KACAC,EAMS,EANTA,SACAvC,EAKS,EALTA,UAKS,IAJTgB,eAIS,aAHTC,iBAGS,SAFTF,EAES,EAFTA,GACG1C,EACM,iBAEPH,EACEgD,qBAAW3E,KADb2B,UAGF,OADA6B,EAAWG,YAAmBH,EAAU,eACpBvB,cAAK,SAAD,YAAC,eAAeH,GAAhB,IACtBiE,KAAMC,EACNtE,IAAKA,EACL+B,UAAWI,IAAWJ,EAAWD,EAAUuC,GAAQ,GAAJ,OAAOvC,EAAP,YAAmBuC,GAAQtB,GAAW,WAAYC,GAAa,cAC9GF,GAAIA,GAAM7C,QAGdsG,EAAW7F,YAAc,aACV6F,Q,wCCxBTC,EAAwBjI,cAC9B,WAMGyB,GAAQ,IALT8B,EAKS,EALTA,SACAC,EAIS,EAJTA,UAIS,IAHT7B,GAAIC,OAGK,MAHO,QAGP,EAFTsG,EAES,EAFTA,MACGrG,EACM,iBAET,OADA0B,EAAWG,YAAmBH,EAAU,aACpBvB,cAAKJ,EAAD,YAAC,eAAgBC,GAAjB,IACtBJ,IAAKA,EACL+B,UAAWI,IAAWJ,EAAWD,EAAU2E,GAAS,oBAGxDD,EAAS9F,YAAc,WACR8F,QChBTE,EAAsBnI,cAAiB,SAAC6B,EAAOJ,GAAR,OAA6BO,cAAK4C,EAAD,YAAC,eAAgB/C,GAAjB,IAC5EJ,IAAKA,EACLsC,KAAM,eAERoE,EAAOhG,YAAc,SACN3B,cAAOiF,OAAO0C,EAAQ,CACnCzC,MAAOd,EAAUc,MACjBC,MAAOf,EAAUe,Q,4CCIb7B,GAAY,CAShBsE,KAAMpE,IAAUqE,IAMhBC,UAAWtE,IAAUG,KACrBxC,GAAIqC,IAAUI,aAEVmE,GAAoBvI,cAAiB,WAMxCyB,GANwC,IACzC+B,EADyC,EACzCA,UACA8E,EAFyC,EAEzCA,UAFyC,IAIzC3G,GAAIC,OAJqC,MAIzB,OAJyB,EAKtCC,EALsC,yBAMnBG,cAAKJ,EAAD,YAAC,eAAgBC,GAAjB,IAC1BJ,IAAKA,EACL+B,UAAWI,IAAWJ,EAAW8E,GAAa,uBAEhDC,GAAKpG,YAAc,OACnBoG,GAAKzE,UAAYA,GACFtD,WAAOiF,OAAO8C,GAAM,CACjCC,MAAOhH,IACPiH,QAAS7C,EACT8C,SAAUC,EACVC,MAAOhE,EACPuD,UACAxC,MAAOgC,EACPkB,KAAMZ,EACNa,MAAOf,EACPgB,OAAQf,EACR1E","file":"static/js/0.0f7b4ccd.chunk.js","sourcesContent":["import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = label != null && label !== false && !children;\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, label && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});"],"sourceRoot":""}